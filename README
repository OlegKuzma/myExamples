Projects description



        1.Task_Interface

Объявите 2 интерфейса
interface Operation{
double exec( double a, double b );
}

interface OperationFactory{
Operation getOpInstance( String op );
}

Интерфейс Operation олицетворяет классы, выполняющие некую операцию над двумя аргументами. 
Интерфейс OperationFactory - это шаблон класса, который по коду операции способен создать экземпляр класса, 
реализующего интерфейс Operation и созданного специально для выполнения операции с указанным кодом. 

Если передан некорректный код операции, метод getOpInstance возвращает null.

Создайте класс Calculator, который принимает в качестве аргумента конструктора экземпляр класса, 
реализующего интерфейс OperationFactory. Класс Calculator должен содержать метод exec, который обеспечивает цикл ввода оргументов и кода операции, 
выполнение операции путем получения соответствующего объекта через OperationFactory и вывод результата.

Создайте реализации интерфейса Operation для операций сложения, вычитания, умножения, деления (OpPlus, OpMinus, OpMul, OpDiv соответственно).

Создайте реализацию интерфейса OperationFactory, создающую перечисленные выше объекты (MyOpFactory).

Основной (запускаемый) класс программы должен создать экземпляр класса MyOpFactory, создать экземпляр класса Calculator, 
передав ему в качестве параметра объект MyOpFactory и выполнить метод exec созданного объекта Calculator.
Расширьте функциональность полученного калькулятора, реализовав класс для возведения в степень (OpPow) и видоизменив соответствующим образом класс MyOpFactory.



        2.Task_SwingTable

Нарисуйте диалоговое окно (используя SWING) на котором расположите: таблицу, поле для поиска, кнопку Close. 

Таблица должна состоять из 7 колонок и должна отображать данные из таблицы в базе данных.
Структуру таблицы в базе данных можно придумать самому. Таблица должна содержать колонки типа: varchar, timestamp, integer, Boolean. 

Поиск должен осуществляться по всем видимым полям таблицы, ячейки в таблице должны быть редактируемые. 

Базу данных можно использовать любую. Если соединение к базе данных не установлено, диалоговое окно должно запускаться и отображать пустую таблицу. 



		3.Task_Breacket_Matching

Нарисуйте окно (используя SWING) на котором расположите: строку для указания пути к файлу .txt, кнопку выбора, дерево папок с файлами .txt.

Строка для указания пути находится в самом верху, слева от нее кнопка, под ними рисуется дерево папок и файлов.

В выбранном файле подсчитывается количество открывающихся и закрывающихся круглых скобок, если количество не одинаковое, то имя файла в дереве выделяется красным текстом.



		4.Task_First_Non_Unique_Symbol
		
Найти первый не уникальный символ в последовательности символов любой длинны. Последовательность должна состоять только из символов латинницы.

	
		
		5.Task_Matches_For_Squares
Задание
Напишите программу, которая будет определять минимальное количество спичек,
необходимых для того, чтобы выложить на плоскости N квадратов со стороной в две
спички. Вершинами квадратов должны быть точки, где сходятся концы спичек.

Входные данные
Целое положительное число N - количество квадратов.

Выходные данные
Целое число - минимальное количество спичек требуемых для составления заданного
количества квадратов N.	

		6.Task_Web
Задание:
	Написать тестовый сайт на spring статический, пару страниц как на сайте face-star.com -  
	"о конкурсе" и похожие, для страниц template engine - apache tiles, bootstrap + JQuery.  Также maven использовать.